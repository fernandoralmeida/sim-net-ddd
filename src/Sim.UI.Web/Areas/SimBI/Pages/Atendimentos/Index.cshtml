@page
@model Sim.UI.Web.Areas.SimBI.Pages.Atendimentos.IndexModel

@{
    Layout = "_Layout.cshtml";
    ViewData["Title"] = "Index";
    ViewData["ActiveButton"] = Model.ButtonPressed;
}

<partial name="_StatusMessage" model="Model.StatusMessage" />

<div class="row">
    <form method="post" class="row center">

        <button class="@NavPages.JanNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="jan">Jan</button>
        <button class="@NavPages.FevNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="fev">Fev</button>
        <button class="@NavPages.MarNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="mar">Mar</button>
        <button class="@NavPages.AbrNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="abr">Abr</button>
        <button class="@NavPages.MaiNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="mai">Mai</button>
        <button class="@NavPages.JunNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="jun">Jun</button>
        <button class="@NavPages.JulNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="jul">Jul</button>
        <button class="@NavPages.AgoNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="ago">Ago</button>
        <button class="@NavPages.SetNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="set">Set</button>
        <button class="@NavPages.OutNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="out">Out</button>
        <button class="@NavPages.NovNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="nov">Nov</button>
        <button class="@NavPages.DezNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Month" asp-route-id="dez">Dez</button>
        <button class="@NavPages.YearNavClass(ViewContext) waves-effect waves-light" asp-page-handler="Year">Anual</button>
    </form>
    <ul class="collapsible popout">
        @{
            var ativo = "active";
        }

        @foreach (var setor in Model.Input)
        {

            <li class="@ativo">

                @{ ativo = string.Empty; }

                <div class="collapsible-header waves-effect waves-green">@setor.FirstOrDefault().Key<span class="new badge blue" data-badge-caption="@setor.FirstOrDefault().Value">Atendimentos</span></div>
                <div class="collapsible-body white">
                    <div class="row">
                        <div class="col s12 m4 l4">
                            <ul class="collection z-depth-1">
                                <li class="collection-item"><i class="material-icons left">handyman</i>Serviços Executados</li>
                                @foreach (var op in setor)
                                {
                                    @if (op.Key.Contains("Servico-"))
                                    {
                                        <li class="collection-item"><span class="new badge green lighten-1" data-badge-caption="@op.Value"></span><a class="modal-trigger blue-grey-text" href="#viewmodal" data-hdlr="ServicoPreview" data-id="@op.Key.Replace("Servico-", "")" data-mth="@Model.ButtonPressed" title="Detalhar serviço">@op.Key.Replace("Servico-", "")</a></li>
                                    }
                                }
                            </ul>
                        </div>
                        <div class="col s12 m4 l4">
                            <ul class="collection z-depth-1">
                                <li class="collection-item"><i class="material-icons left">desktop_windows</i>Canais de Atendimento</li>
                                @foreach (var op in setor)
                                {
                                    @if (op.Key.Contains("Canal-"))
                                    {
                                        <li class="collection-item"><span class="new badge blue lighten-1" data-badge-caption="@op.Value"></span><a class="modal-trigger blue-grey-text" href="#viewmodalcanal" data-hdlr="CanalPreview" data-id="@op.Key.Replace("Canal-", "")" data-id2="@setor.FirstOrDefault().Key" data-mth="@Model.ButtonPressed"  title="Detalhar canal de atendimento">@op.Key.Replace("Canal-", "")</a></li>
                                    }
                                }
                            </ul>
                        </div>
                        <div class="col s12 m4 l4">
                            <ul class="collection z-depth-1">
                                <li class="collection-item"><i class="material-icons left">account_box</i>Antendentes</li>
                                @foreach (var op in setor)
                                {
                                    @if (op.Key.Contains("User-"))
                                    {
                                        <li class="collection-item"><span class="new badge blue lighten-1" data-badge-caption="@op.Value"></span><a class="modal-trigger blue-grey-text" href="#viewmodaluser" data-hdlr="Preview" data-id="@op.Key.Replace("User-", "")" data-id2="@setor.FirstOrDefault().Key" data-mth="@Model.ButtonPressed" title="Detalhar atendimentos">@op.Key.Replace("User-", "")</a></li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

<!-- Modal Structure -->
<div id="viewmodal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <ul class="collection showcollection"></ul>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close btn waves-effect">Fechar</a>
    </div>
</div>

<!-- Modal Structure Canal-->
<div id="viewmodalcanal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <ul class="collection showcollectionCanal"></ul>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close btn waves-effect">Fechar</a>
    </div>
</div>

<!-- Modal Structure User-->
<div id="viewmodaluser" class="modal modal-fixed-footer">
    <div class="modal-content">
        <ul class="collection showcollectionUser"></ul>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close btn waves-effect">Fechar</a>
    </div>
</div>

@section scripts{
    <script>
        $(function () {
            $(".modal-trigger").click(function () {
                var param1 = $(this).data('id');
                var param2 = $(this).data('mth');
                var param3 = $(this).data('hdlr');
                $(".showcollection").empty();
                $.getJSON(`/SimBI/Atendimentos?id=${param1}&mth=${param2}&handler=${param3}`, (data) => {
                    var cor = "darken-1";
                    $.each(data, function (i, item) {
                        $(".showcollection").append(`<li class="collection-item"><span class="new badge green ${cor}" data-badge-caption="${item.value}"></span>${item.key}</li>`);
                        cor = "lighten-1";
                    });
                });
            });
            $(".modal-trigger").click(function () {
                var param1 = $(this).data('id');
                var param2 = $(this).data('id2');
                var param3 = $(this).data('mth');
                var param4 = $(this).data('hdlr');
                $(".showcollectionCanal").empty();
                $.getJSON(`/SimBI/Atendimentos?id=${param1}&id2=${param2}&mth=${param3}&handler=${param4}`, (data) => {
                    var cor = "blue";
                    $.each(data, function (i, item) {                        
                        $(".showcollectionCanal").append(`<li class="collection-item"><span class="new badge ${cor} lighten-1" data-badge-caption="${item.value}"></span>${item.key}</li>`);
                        cor = "green";
                    });
                });
            });
            $(".modal-trigger").click(function () {
                var param1 = $(this).data('id');
                var param2 = $(this).data('id2');
                var param3 = $(this).data('mth');
                var param4 = $(this).data('hdlr');
                $(".showcollectionUser").empty();
                $.getJSON(`/SimBI/Atendimentos?id=${param1}&id2=${param2}&mth=${param3}&handler=${param4}`, (data) => {
                    var cor = "blue";
                    $.each(data, function (i, item) {
                        $(".showcollectionUser").append(`<li class="collection-item"><span class="new badge ${cor} lighten-1" data-badge-caption="${item.value}"></span>${item.key}</li>`);
                        cor = "green";
                    });
                });
            });
        });
    </script>
}
