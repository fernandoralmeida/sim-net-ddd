@page
@model Sim.UI.Web.Pages.Atendimento.IndexModel

@{
    ViewData["Title"] = "Index";
    ViewData["ActivePage"] = AtendimentoNavPages.Inicio;
}

<partial name="_StatusMessage" model="Model.StatusMessage" />
<div class="row">    
    <form class="col s12 center" method="post">
        <div class="row">
            <div class="input col s4">
                <input asp-for="Input.DataAtendimento">
            </div>
            <div class="col s1">
                <button class="btn waves-effect waves-light" type="submit" role="button"><i class="material-icons">search</i></button>
            </div>
        </div>

    </form>
</div>

<div>
    <table>
        <caption>Lista de atendimentos!</caption>
        <thead>
            <tr>
                <th>
                    N
                </th>
                <th>
                    Protocolo
                </th>
                <th>
                    Horário
                </th>
                <th>
                    Cliente
                </th>
                <th>
                    Servicos
                </th>
                <th>
                    Setor
                </th>
                <th>
                    Canal
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                int cont = 0;
            }


            @foreach (var item in Model.Input.ListaAtendimento)
            {
                <tr>
                    <td>
                        @{cont++;}
                        @cont.ToString()
                    </td>
                    <td>
                        <a href="#" class="link-secondary viewbutton" data-secao="Atendimento" data-acao="Detail" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#viewmodal">@Html.DisplayFor(modelItem => item.Protocolo)</a>                        
                    </td>
                    <td>
                        @{
                            var d1 = Convert.ToDateTime(item.Data);
                            var d2 = Convert.ToDateTime(item.DataF);
                            var datainicial = d1.ToShortTimeString();
                            var datafinal = d2.ToShortTimeString();
                        }

                        @Html.DisplayFor(modelItem => datainicial)
                        @Html.DisplayFor(modelItem => datafinal)
                    </td>
                    <td>
                        <a href="#" class="link-secondary viewbutton" data-secao="Pessoa"  data-acao="Details" data-id="@item.Pessoa.Id" data-bs-toggle="modal" data-bs-target="#viewmodal">@Html.DisplayFor(modelItem => item.Pessoa.Nome)</a>
                        @if (item.Empresa != null)
                        {
                            <a href="#" class="link-secondary viewbutton" data-secao="Empresa"  data-acao="Perfil" data-id="@item.Empresa.Id" data-bs-toggle="modal" data-bs-target="#viewmodal">[@item.Empresa.CNPJ]</a>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Servicos)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Setor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Canal)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="viewmodal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="viewmodalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="viewmodalLabel">Detalhes</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="viewmodalData"></p>
            </div>
        </div>
    </div>
</div>

