@page
@model Sim.UI.Web.Pages.Atendimento.IndexModel

@{
    ViewData["Title"] = "Index";
    ViewData["ActivePage"] = AtendimentoNavPages.Inicio;
}

<!--<partial name="_StatusMessage" model="Model.StatusMessage" />-->

<form class="section" method="post">
    <div class="row">
        <div class="col s12">
            <div class="col s6">
                <div class="input-field right">
                    <input asp-for="Input.DataAtendimento" id="inputdate" />
                    <label for="inputdate">Atendimentos do dia</label>
                </div>
            </div>
            <div class="col s6">
                <div class="input-field">
                    <button class="btn waves-effect" type="submit"><i class="material-icons">search</i></button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="card">
    <table>
        <thead>
            <tr>
                <th>
                    N
                </th>
                <th>
                    Protocolo
                </th>
                <th>
                    Horário
                </th>
                <th>
                    Cliente
                </th>
                <th>
                    Servicos
                </th>
                <th>
                    Setor
                </th>
                <th>
                    Canal
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                int cont = 0;
            }


            @foreach (var item in Model.Input.ListaAtendimento)
            {
                <tr>
                    <td>
                        @{cont++;}
                        @cont.ToString()
                    </td>
                    <td>
                        <a href="#viewmodal" class="modal-trigger viewbutton" data-secao="Atendimento" data-acao="Detail" data-id="@item.Id">@Html.DisplayFor(modelItem => item.Protocolo)</a>
                    </td>
                    <td>
                        @{
                            var d1 = Convert.ToDateTime(item.Data);
                            var d2 = Convert.ToDateTime(item.DataF);
                            var datainicial = d1.ToShortTimeString();
                            var datafinal = d2.ToShortTimeString();
                        }

                        @Html.DisplayFor(modelItem => datainicial)
                        @Html.DisplayFor(modelItem => datafinal)
                    </td>
                    <td>
                        <a class="viewbutton modal-trigger" data-secao="Pessoa" data-acao="Details" data-id="@item.Pessoa.Id" href="#viewmodal">@Html.DisplayFor(modelItem => item.Pessoa.Nome)</a>
                        @if (item.Empresa != null)
                        {
                            <a class="viewbutton modal-trigger" data-secao="Empresa" data-acao="Perfil" data-id="@item.Empresa.Id" href="#viewmodal">[@item.Empresa.CNPJ]</a>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Servicos)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Setor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Canal)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal Structure -->
<div id="viewmodal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <!---->
        <p id="viewmodalData"></p>

    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Agree</a>
    </div>
</div>